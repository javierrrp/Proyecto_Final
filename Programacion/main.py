import pygame, sys
from pygame.locals import *
from pygame.sprite import Sprite
import random as ra
import time
from organismo import *
from animal import *
from planta import *

#Inicializar Pygame
pygame.init()

#crear ventana de Simulador
screen = pygame.display.set_mode((1268,768))


#Icono y titulo
pygame.display.set_caption('Proyecto Final (Simulador Sabana)')
icono = pygame.image.load('Logo.ico')
pygame.display.set_icon(icono)





#Panel de control



celda = 40
fondo = pygame.image.load('map.png')
fondo_rect = fondo.get_rect()


#ciclos
lluvia = False

#colores de las celkdad
#26X20
matriz = [
    [(238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118)],
    [(238, 249, 118), (0, 149, 29), (0, 149, 29), (0, 149, 29), (0, 149, 29), (0, 149, 29), (0, 149, 29), (0, 149, 29), (238, 249, 118), (170, 253, 152), (238, 249, 118), (238, 249, 118), (170, 253, 152), (170, 253, 152), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (170, 253, 152),(238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118)],
    [(238, 249, 118), (0, 149, 29), (0, 149, 29), (0, 149, 29), (0, 149, 29), (0, 149, 29), (0, 149, 29), (0, 149, 29), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (170, 253, 152), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118)],
    [(238, 249, 118), (238, 249, 118), (238, 249, 118), (0, 149, 29), (238, 249, 118), (238, 249, 118), (238, 249, 118), (0, 149, 29), (238, 249, 118), (170, 253, 152), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (191, 191, 191), (191, 191, 191), (191, 191, 191), (170, 253, 152), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118)],
    [(238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (170, 253, 152), (170, 253, 152), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118)],
    [(0, 149, 29), (191, 191, 191), (238, 249, 118), (238, 249, 118), (191, 191, 191), (191, 191, 191), (191, 191, 191), (191, 191, 191), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118)],
    [(191, 191, 191), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (191, 191, 191), (191, 191, 191), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118)],
    [(238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (170, 253, 152), (170, 253, 152), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118)],
    [(238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (191, 191, 191), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118)],
    [(238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118)],
    [(238, 249, 118), (191, 191, 191), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (170, 253, 152), (170, 253, 152), (238, 249, 118), (170, 253, 152), (170, 253, 152), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118)],
    [(238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (170, 253, 152), (170, 253, 152), (238, 249, 118), (238, 249, 118), (238, 249, 118), (170, 253, 152), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118)],
    [(238, 249, 118), (238, 249, 118), (238, 249, 118), (255, 255, 255 ), (255, 255, 255), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118)],
    [(238, 249, 118), (238, 249, 118), (238, 249, 118), (255, 255, 255 ), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (191, 191, 191), (238, 249, 118), (238, 249, 118), (238, 249, 118), (170, 253, 152), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118)],
    [(238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (170, 253, 152), (191, 191, 191), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (191, 191, 191), (191, 191, 191), (238, 249, 118), (238, 249, 118), (191, 191, 191), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118)],
    [(238, 249, 118), (238, 249, 118), (238, 249, 118), (255, 255, 255 ), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (191, 191, 191), (238, 249, 118), (238, 249, 118), (238, 249, 118), (170, 253, 152), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118)],
    [(238, 249, 118), (238, 249, 118), (238, 249, 118), (255, 255, 255 ), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (191, 191, 191), (238, 249, 118), (238, 249, 118), (238, 249, 118), (170, 253, 152), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118)],
    [(238, 249, 118), (238, 249, 118), (238, 249, 118), (255, 255, 255 ), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (191, 191, 191), (238, 249, 118), (238, 249, 118), (238, 249, 118), (170, 253, 152), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118)],
    [(238, 249, 118), (238, 249, 118), (238, 249, 118), (255, 255, 255 ), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (191, 191, 191), (238, 249, 118), (238, 249, 118), (238, 249, 118), (170, 253, 152), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118)],
     [(238, 249, 118), (238, 249, 118), (238, 249, 118), (255, 255, 255 ), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (191, 191, 191), (238, 249, 118), (238, 249, 118), (238, 249, 118), (170, 253, 152), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118), (238, 249, 118)],]



#Clases 


class Panel:
    def __init__(self):
        self.ubicacionx = 768 + 200
        self.ubicaciony = 0
        self.ancho = 300
        self.a = 1268
    
    def pintar(self):
        a = pygame.Rect(self.ubicacionx, self.ubicaciony, self.ancho, self.a)
        screen.fill((100, 100, 100), a)
    def botones(self):
        # lluvia
        self.lluvia = Rect(1040, 400, 150, 50)
        self.myFont = pygame.font.SysFont("Calibri", 30)
        self.texto = self.myFont.render("Lluvia", True, (220,220,220))
        pygame.draw.rect(screen, (70, 189, 34), self.lluvia, 0)
        screen.blit(self.texto, (1080, 400))
        if self.lluvia.collidepoint(pygame.mouse.get_pos()):
            pygame.draw.rect(screen, (70, 189, 34), self.lluvia, 0)
    
    def textos(self):
        myFont = pygame.font.SysFont("Calibri", 30)
        t_hora = myFont.render(f"Ciclos: {hora}", True, (220, 220, 220))
        screen.blit(t_hora, (self.ubicacionx + 20, self.ubicaciony + 20))



class Ambiente:
    def __init__(self):
        pass
    class lluvia:
        #Constructor
        def __init__(self):
            #posicionx 
            self.x = ra.randint(0, 1024)
            #posiciony
            self.y = ra.randint(-200, -20)
            #Velocidad al caer en eje y
            self.yspeed = ra.uniform(0.2, 5)
            self.tamaño = ra.randint(10, 20)
            

        def mostrar(self):

            self.y += self.yspeed
            self.yspeed += 10

            if self.y > 768:
                self.y = ra.randint(-200, -20)
                self.yspeed = ra.uniform(5, 1)

            pygame.draw.line(screen, (0, 191, 255), (self.x, self.y), (self.x, self.y+self.tamaño), 2)

    
    class Tormenta_Arena:
        pass
    




gotas = [Ambiente.lluvia() for _ in range(250)]
ciclos = 0

#Creamos un par de animales
leon = Leon("Carnivoro", "sada", 100, 30)
leona = Leona("Carnivoro", "sada", 100, 30)
cebra = Cebra("Herviboro", "sada", 100, 30)
cebra2 = Cebra("Herviboro", "sada", 100, 30)
cerdo = Cerdo("Omnivoro", "sada", 100, 30)
jirafa = Jirafa("Herviboro", "sada", 100, 30)
elefante = Elefante("Herviboro", "sada", 100, 30)
leopardo = Leopardo("Carnivoro", "sada", 100, 30)
suricata = Suricata("Insectivoro", "sada", 100, 30)
jabali = Jabali("Omnivoro", "sada", 100, 30)


#Crear Plantas
plantita = Planta1(5, 3, 100, 12)
plantita2 = Planta2(12, 7, 100, 12)
plantita3 = Planta3(16, 2, 100, 32)
plantita4 = Planta3(11, 4, 100, 14)
plantita5 = Planta3(9, 8, 100, 14)
plantita6 = Planta3(11, 9, 100, 14)
plantita7 = Planta1(8, 1, 100, 12)
plantita8 = Planta2(14, 7, 100, 12)
plantita9 = Planta1(6, 9, 100, 12)
plantita10 = Planta2(16, 1, 100, 12)

#Creacion animales
all_sprites = pygame.sprite.Group()
lista = [leon, leona, cebra, cerdo, jirafa, elefante, leopardo, suricata, jabali, cebra2]
listaplantas = [plantita, plantita2, plantita3, plantita4, plantita5, plantita6, plantita7, plantita8, plantita9, plantita10]
all_sprites.add(lista, listaplantas)



dibujado = Panel()


#Banderas de Eventos Climaticos
llover = False


ani = Animal(100, 50, 0, 0)
#Hora
hora = 0
#Bucle del Programa
while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()

    screen.blit(fondo, fondo_rect)
    

    #Dibujar Lineas en la matriz 
    #Color, inicio y fin, resolucion, Grosor de linea
    for i in range(1, len(matriz)):
        pygame.draw.line(screen, (0, 0, 0), (0, i * celda), (1024, i * celda), 1)
    for j in range(1, len(matriz[0])):
        pygame.draw.line(screen, (0, 0, 0), (j * celda, 0), (j * celda, 768), 1)
    
    

   #Ciclos
    ciclos += 1
    if ciclos >= 100:
        hora += 1
        ani.vida -= 50
        ciclos = 0
    
    
    if hora > 100 and not llover:
        llover = True    
    if hora > 200:
        llover = False
        
    if llover:
        for gota in gotas:
            gota.mostrar()

    
    for sprite in lista:
        colisiones = pygame.sprite.spritecollide(sprite, lista, False)
        for colision in colisiones:
            if isinstance(colision, Animal) and isinstance(sprite, Animal):
                if colision.dieta == "Carnivoro" and sprite.dieta != "Carnivoro":
                    colision.cazar(sprite)  # El animal carnívoro caza a la presa
                    if sprite in lista:
                        lista.remove(sprite)  # Eliminar la presa de la lista
                        all_sprites.remove(sprite)

        if sprite.vida <= 0:  # Verificar si el sprite actual cumple la condición de vida baja
            if sprite in lista:  # Verificar si el sprite está en la lista antes de eliminarlo
                lista.remove(sprite)
                all_sprites.remove(sprite)

    
    if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:
            if dibujado.lluvia.collidepoint(pygame.mouse.get_pos()):
                if llover:
                    llover = False
                else:
                    llover = True

    dibujado.pintar()
    dibujado.botones()
    dibujado.textos()
    all_sprites.update()
    all_sprites.draw(screen)
    pygame.display.flip()

    #rANGO DE (1,4) para que cuando este en 1, la presa escape Idea de franco